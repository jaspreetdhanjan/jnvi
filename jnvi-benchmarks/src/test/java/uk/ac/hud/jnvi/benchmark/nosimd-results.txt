256 element vectors, no SIMD intrinsic code

#pragma omp parallel for
for(int i=0; i<n; i++) {
	dest[i] = src1[i] + src2[i];
}


CFLAGS+=-mavx2
CFLAGS+=-O3 -funroll-loops

Benchmark                         Mode  Cnt         Score         Error  Units
JNVIBenchmark.divideVectors      thrpt   20   6233363.053 ±  100032.907  ops/s
JNVIBenchmark.multiplyVectors    thrpt   20  28431643.762 ± 3159931.389  ops/s
JNVIBenchmark.rSqrtVectors       thrpt   20  66175917.661 ±  235123.564  ops/s
JNVIBenchmark.sqrtVectors        thrpt   20  66133844.665 ±  210685.965  ops/s
LinearBenchmark.divideVectors    thrpt   20   5706280.604 ±   19790.898  ops/s
LinearBenchmark.multiplyVectors  thrpt   20  37197527.167 ±  141746.454  ops/s
LinearBenchmark.rSqrtVectors     thrpt   20    336827.382 ±    1293.872  ops/s
LinearBenchmark.sqrtVectors      thrpt   20   5664767.908 ±   22636.075  ops/s

again....

Benchmark                         Mode  Cnt         Score        Error  Units
JNVIBenchmark.divideVectors      thrpt   20   6213181.007 ±  86762.870  ops/s
JNVIBenchmark.multiplyVectors    thrpt   20  29609837.709 ± 844206.707  ops/s
JNVIBenchmark.rSqrtVectors       thrpt   20  66105643.040 ± 591625.209  ops/s
JNVIBenchmark.sqrtVectors        thrpt   20  66231623.161 ± 309024.607  ops/s
LinearBenchmark.divideVectors    thrpt   20   5708008.365 ±  16701.874  ops/s
LinearBenchmark.multiplyVectors  thrpt   20  37219298.439 ± 199231.483  ops/s
LinearBenchmark.rSqrtVectors     thrpt   20    334537.885 ±   1007.618  ops/s
LinearBenchmark.sqrtVectors      thrpt   20   5613568.653 ±  67968.242  ops/s